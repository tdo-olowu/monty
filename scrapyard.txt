/**
 * read_line - read opcodes
 * @buf: pointer to the input buffer
 * @lenptr: pointer to length of buffer
 * @filestr: filestream pointer.
 * Return: number of bytes read.
 */
ssize_t read_line(char **buf, size_t *lenptr, FILE *filestr)
{
	char ch;
	ssize_t bytes_read = 0;
	size_t i = 0, bufsize = *lenptr;
	(void)bytes_read;

	if (buf == NULL || lenptr == NULL)
	{
		perror("Invalid argument\n");
		return (-1);
	}
	if (*buf == NULL)
	{
		*buf = malloc(bufsize * sizeof(char));
		if (*buf == NULL)
		{
			perror("Couldn't allocate memory");
			exit(EXIT_FAILURE);
		}
	}
	while (((ch = fgetc(filestr)) != EOF) && (ch != '\n'))
	{
		if (i >= bufsize - 1)
		{
			bufsize += bufsize;
			*buf = realloc(*buf, bufsize);
			if (*buf == NULL)
				exit(EXIT_FAILURE);
		}
	}
	(*buf)[i++] = (char)ch;
	(*buf)[i] = '\0';
	*lenptr = bufsize;

	if ((ch == EOF) && (i == 0))
		return (-1);
	return (i);
}

